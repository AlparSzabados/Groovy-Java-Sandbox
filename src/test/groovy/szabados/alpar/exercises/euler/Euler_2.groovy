package szabados.alpar.exercises.euler

import org.junit.Test

import static szabados.alpar.exercises.euler.Utils.fibonacci

class Euler_2 {

    /**
     * <strong>Problem 2: Even Fibonacci numbers</strong>
     * <p>
     * Each new term in the Fibonacci sequence is generated by adding the previous
     * two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5,
     * 8, 13, 21, 34, 55, 89, ...
     * <p>
     * By considering the terms in the Fibonacci sequence whose values do not exceed
     * four million, find the sum of the even-valued terms.
     * <p>
     * See also <a href="https://projecteuler.net/problem=2">projecteuler.net problem 2</a>.
     */
    @Test
    public void shouldSolveProblem2() {
        assert (sumOfEvenFibonacciValuesNotExceeding(90)) == 44
        assert (sumOfEvenFibonacciValuesNotExceeding(4_000_000)) == 4_613_732
    }

    private static int sumOfEvenFibonacciValuesNotExceeding(int limit) {
        return fibonacci(limit).findAll { int n -> filter n }.sum() as int
    }

    private static boolean filter(int num) {
        return num % 2 == 0
    }
}
